admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: {
      protocol : TCP,
      address: 0.0.0.0,
      port_value: 9901 }
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: {
        protocol: TCP,
        address: 0.0.0.0,
        port_value: 10000 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              # - match: {
              #     prefix: "/h"
              # }
              #   route: {
              #     prefix_rewrite: "/api/hotel",
              #     cluster: hotel_service
              #   }
          http_filters:
          - name: envoy.filters.http.router
  - name: listener_1
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10001
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: travelagency_service
              domains: ["*"]
              routes:
              #hotel_service
              - match: 
                  prefix: "/hotel"
               
                route: 
                  prefix_rewrite: "/api/hotel"
                  cluster: secure_hotel_service
                
              - match: 
                  prefix: "/hoffer"
              
                route: 
                  prefix_rewrite: "/api/hoteloffer"
                  cluster: secure_hotel_service

              - match:
                  prefix: "/hreview"
                route:
                  prefix_rewrite: "api/hotelreview"
                  cluster: secure_hotel_service  
              
              - match: 
                  prefix: "/hroom"
              
                route: 
                  prefix_rewrite: "/api/hotelroom"
                  cluster: secure_hotel_service
                
              - match:
                  prefix: "/rtype"
                route:
                  prefix_rewrite: "/api/roomtype"
                  cluster: secure_hotel_service
              # #end_hotel_service
              - match:
                  prefix: "/booking"
                route:
                  prefix_rewrite: "/api/booking"
                  cluster: secure_booking_service
              #travel_service
              - match: 
                  prefix: "/toffer"
              
                route: 
                  prefix_rewrite: "/api/transportoffer"
                  cluster: secure_travel_service
                
              - match:
                  prefix: "/tcompany"
                route:
                  prefix_rewrite: "/api/transportcompany"
                  cluster: secure_travel_service
              - match:
                  prefix: "/tour"
                route:
                  prefix_rewrite: "/api/tour"
                  cluster: secure_travel_service
              - match:
                  prefix: "/country"
                route:
                  prefix_rewrite: "/api/country"
                  cluster: secure_travel_service
              - match:
                  prefix: "/city"
                route:
                  prefix_rewrite: "/api/city"
                  cluster: secure_travel_service
              - match:
                  prefix: "/attraction"
                route:
                  prefix_rewrite: "/api/attraction"
                  cluster: secure_travel_service
              #end_travel_service
              - match:
                  prefix: "/nfeed"
                route:
                  prefix_rewrite: "/api/newsfeed"
                  cluster: secure_apigateway
              #user_service
              - match:
                  prefix: "/user"
                route:
                  prefix_rewrite: "/api/user"
                  cluster: secure_user_service
              - match:
                  prefix: "/userrole"
                route:
                  prefix_rewrite: "/api/userrole"
                  cluster: secure_user_service
              - match:
                  prefix: "/role"
                route:
                  prefix_rewrite: "/api/role"
                  cluster: secure_user_service
              
              #end_user_service
          http_filters:
          - name: envoy.filters.http.router
      tls_context:
        common_tls_context:
          tls_certificates:
            - certificate_chain:
                filename: "/etc/ssl/certs/https.crt"
              private_key:
                filename: "/etc/ssl/certs/key.pem"
  clusters:
  - name: secure_booking_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: secure_booking_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: travelagency.bookingservice
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: localhost            
  - name: secure_hotel_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: secure_hotel_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: travelagency.hotelservice
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: localhost            
  - name: secure_travel_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: secure_travel_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: travelagency.travelservice
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: localhost            
  - name: secure_apigateway
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: secure_apigateway
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: apigatway
                port_value: 443      
  - name: secure_user_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: secure_user_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: travelagency.userservice
                port_value: 443       
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: localhost            
  - name: hotel_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: hotel_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: travelagency.hotelservice
                port_value: 80